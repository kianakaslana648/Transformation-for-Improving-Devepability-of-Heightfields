function [bad,INT,BOU] = remove_badedge(Z, INT_prev, h)
%移除坏边所涉及的点
bad = [];
threshold = 100;
m = size(Z,1);
neighbor_odd = [1, m+1, -m, m, -1, m-1];
neighbor_oven = [-m+1, 1, -m, m, -m-1, -1];
bias_odd = [2, m, 1, 0, -m, -1;...
            2*m+1, m-1, m+1, 0, 1, -m;...
            -m+1, m+1, -m, 0, -1, m-1;...
            2*m-1, -1, m, 0, m+1, 1;...
            -m-1, 1, -1, 0, m-1, m;...
            -2, -m, m-1, 0, m, m+1];
bias_oven = [2, m, -m+1, 0, -m, -m-1;...
             m+1, -1, 1, 0, -m+1, -m;...
             -2*m+1, 1, -m, 0, -m-1, -1;...
             m-1, -m-1, m, 0, 1, -m+1;...
             -2*m-1, -m+1, -m-1, 0, -1, m;...
             -2, -m, -1, 0, m, 1];
B =...
[           -1/h^2,           1/h^2,               4/h^2,               -4/h^2, -2/h^2,          2/h^2;...
            1/h^2,       1/(3*h^2),          -8/(3*h^2),                    0,  2/h^2,     -2/(3*h^2);...
 -3^(1/2)/(3*h^2), 3^(1/2)/(3*h^2), (2*3^(1/2))/(3*h^2), -(2*3^(1/2))/(3*h^2),      0,              0;...
                0,               0,                -1/h,                  1/h,      0,              0;...
    3^(1/2)/(3*h),               0,  -(2*3^(1/2))/(3*h),    (2*3^(1/2))/(3*h),      0, -3^(1/2)/(3*h);...
              1/8,            -1/8,                   0,                    1,    1/4,           -1/4];
CC = B(1:3,:);
for ii = 1:length(INT_prev)
    for jj = 1:6
        if mod(mod(ii, m),2) == 1
            values = Z(INT_prev(ii)+bias_odd(jj,:))';
            HH = CC*values;
            [~,SS,~] = svd([HH(1),HH(3);HH(3),HH(2)]);
            if SS(1,1) > threshold
                bad = [bad, INT_prev(ii)+neighbor_odd(jj)];
            end
        else
        	values = Z(INT_prev(ii)+bias_oven(jj,:))';
            HH = CC*values;
            [~,SS,~] = svd([HH(1),HH(3);HH(3),HH(2)]);
            if SS(1,1) > threshold
                bad = [bad, INT_prev(ii)+neighbor_oven(jj)];
            end
        end
    end 
end
INT = setdiff(INT_prev, bad);
BOU = unique([INT + 1, INT - 1,...
    INT - m, INT - m - 1, INT - m + 1,...
    INT + m, INT + m - 1, INT + m + 1]);
BOU = setdiff(BOU, INT);
end

